# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - run: yarn
    - run: yarn lint
  test_sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn
    - run: yarn test
  test_postgres:
    runs-on: ubuntu-latest
    container: node:12-alpine
    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_PASSWORD: postgres
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - run: yarn
    - run: yarn add pg
    - run: yarn test
      env:
        DB_CLIENT: pg
        DB_URL: 'postgres://postgres:postgres@postgres:5432/postgres'
  test_mysql:
    runs-on: ubuntu-latest
    container: node:12-alpine
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: test
          MYSQL_USER: mysql
          MYSQL_PASSWORD: mysql
          MYSQL_RANDOM_ROOT_PASSWORD: yes
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v2
    - run: yarn
    - run: yarn add mysql
    - run: yarn test
      env:
        DB_CLIENT: mysql
        DB_URL: 'mysql://mysql:mysql@mysql:3306/test'

